{"version":3,"file":"component---src-pages-product-strapi-product-slug-tsx-9d4b91176d3b84e65658.js","mappings":"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","sources":["webpack://voronoi-shopping/./src/common/constants/paths.ts","webpack://voronoi-shopping/./src/common/utility/get-image.ts","webpack://voronoi-shopping/./src/common/components/Container.tsx","webpack://voronoi-shopping/./src/features/project/ImageContainer.tsx","webpack://voronoi-shopping/./src/features/project/DetailBody.tsx","webpack://voronoi-shopping/./src/features/project/ImagesPreview.tsx","webpack://voronoi-shopping/./src/features/project/InfoRow.tsx","webpack://voronoi-shopping/./src/features/project/use-image-hash.tsx","webpack://voronoi-shopping/./src/features/project/DetailContent.tsx","webpack://voronoi-shopping/./node_modules/@heroicons/react/solid/esm/ChevronLeftIcon.js","webpack://voronoi-shopping/./node_modules/@heroicons/react/solid/esm/ChevronRightIcon.js","webpack://voronoi-shopping/./src/features/project/SliderControls.tsx","webpack://voronoi-shopping/./src/features/project/Detail.tsx","webpack://voronoi-shopping/./src/features/project/NavContent.tsx","webpack://voronoi-shopping/./src/pages/product/{strapiProduct.slug}.tsx"],"sourcesContent":["export const PATH = {\n  HOME: '/',\n  PRODUCT: '/product',\n  PROJECTS: '/projects'\n} as const\n","import { IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype DeepMaybe<T> = T extends object\n  ? {\n      [P in keyof T]?: P extends 'gatsbyImageData' ? IGatsbyImageData : DeepMaybe<T[P]> | null\n    }\n  : T\n\ntype StrapiMedia = DeepMaybe<Queries.STRAPI__MEDIA> | null\n\nexport const getStrapiImage = <T extends StrapiMedia = StrapiMedia>(queryImage: T) =>\n  queryImage?.localFile?.childImageSharp?.gatsbyImageData\n","import React, { ReactNode } from 'react'\nimport { twMerge } from 'tailwind-merge'\n\ntype ContainerProps = {\n  className?: string\n  children: ReactNode\n}\n\nexport const Container = ({ className = '', children }: ContainerProps) => {\n  return <div className={twMerge('container mx-auto px-6', className)}>{children}</div>\n}\n","import { useBreakpoint } from 'gatsby-plugin-breakpoints'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport React from 'react'\n\ntype ImageContainerProps = {\n  image?: IGatsbyImageData | null\n  caption?: string\n  alternativeText?: string\n  onClose?: () => void\n}\nexport const ImageContainer = ({ image, caption, alternativeText, onClose }: ImageContainerProps) => {\n  const breakpoint = useBreakpoint()\n  return image ? (\n    <div className=\"relative\">\n      <GatsbyImage\n        image={image}\n        alt={alternativeText || ''}\n        className=\"w-full rounded-sm shadow animate-fadeInFast\"\n        loading=\"lazy\"\n      />\n      <div className=\"flex justify-between mt-3\">\n        <div className=\"break-all\">{caption && caption}</div>\n        {!breakpoint.lg && (\n          <button onClick={onClose} className=\"tracking-wide text-highlight py-2\">\n            show description\n          </button>\n        )}\n      </div>\n    </div>\n  ) : null\n}\n","import React, { useMemo } from 'react'\n\nimport { RenderMd } from '../../common/components/RenderMd'\nimport { getStrapiImage } from '../../common/utility/get-image'\nimport notEmpty from '../../common/utility/not-empty'\nimport { ImageContainer } from './ImageContainer'\n\ntype DetailContentProps = {\n  project: Queries.ProductDetailFragment\n  selectedImageIdx: number | null\n  onClosePreview: () => void\n}\nexport const DetailBody = ({\n  project: { description, imagesLarge },\n  selectedImageIdx,\n  onClosePreview\n}: DetailContentProps) => {\n  const selectedImage = useMemo(() => {\n    if (imagesLarge && typeof selectedImageIdx === 'number') {\n      return imagesLarge.filter(notEmpty)[selectedImageIdx]\n    }\n  }, [imagesLarge, selectedImageIdx])\n\n  return (\n    <div className=\"flex-1 order-2 md:order-1\">\n      <div className=\"relative grid\">\n        <article\n          className={`transition-opacity duration-100 col-start-1 ${\n            selectedImage ? 'opacity-0 ease-in absolute overflow-hidden h-full w-full top-0 left-0' : 'opacity-100'\n          }`}\n        >\n          <p className=\"text-justify\"> {description}</p>\n        </article>\n        {selectedImage && (\n          <div className=\"z-10 col-start-1 min-h-[70vw] md:min-h-0\">\n            <ImageContainer\n              image={getStrapiImage(selectedImage)}\n              caption={selectedImage.caption || ''}\n              alternativeText={selectedImage.alternativeText || ''}\n              onClose={onClosePreview}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { useBreakpoint } from 'gatsby-plugin-breakpoints'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport React from 'react'\n\nimport { getStrapiImage } from '../../common/utility/get-image'\n\nexport type ImagesPreviewProps = {\n  images: Queries.ProductDetailFragment['imagesLarge']\n  selectedImageIdx?: number | null\n  onClick: (idx: number) => void\n  onClosePreview: () => void\n}\nexport const ImagesPreview = ({ images, selectedImageIdx = null, onClick, onClosePreview }: ImagesPreviewProps) => {\n  const breakpoint = useBreakpoint()\n  return images ? (\n    <>\n      <div className=\"grid grid-cols-4 gap-3 sm:grid-cols-5 md:grid-cols-2 lg:grid-cols-3\">\n        {images.map((image, idx) => {\n          const imageData = getStrapiImage(image)\n          return image ? (\n            <button\n              key={image.id}\n              className={`relative overflow-hidden rounded-sm shadow-sm transition-all animate-fadeInFast outline ${\n                selectedImageIdx === idx ? 'outline-brand' : 'outline-transparent'\n              }`}\n              onClick={() => onClick(idx)}\n            >\n              {imageData && (\n                <GatsbyImage\n                  image={imageData}\n                  alt={image.alternativeText || ''}\n                  className=\"object-cover object-center aspect-square\"\n                  loading=\"lazy\"\n                />\n              )}\n            </button>\n          ) : null\n        })}\n      </div>\n      {breakpoint.lg && selectedImageIdx !== null && (\n        <button onClick={onClosePreview} className=\"tracking-wide text-highlight py-2\">\n          show description\n        </button>\n      )}\n    </>\n  ) : null\n}\n","import React, { PropsWithChildren, ReactNode } from 'react'\n\ntype InfoItemData = Record<string, any> | string\n\nexport type InfoRowProps<T extends InfoItemData> = {\n  rowTitle?: string\n  data?: T[] | T\n  render?: (item: T) => ReactNode\n}\n\nexport const InfoRow = <T extends InfoItemData>({\n  rowTitle: title,\n  data,\n  render,\n  children\n}: PropsWithChildren<InfoRowProps<T>>) => (\n  <div className=\"flex leading-snug gap-x-3\">\n    {title && <div className=\"text-tertiary\">{title}</div>}\n    {data && (\n      <div className=\"flex flex-wrap gap-x-2\">\n        {Array.isArray(data) ? (\n          data.map((item, idx) => <div key={idx}>{render ? render(item) : item}</div>)\n        ) : (\n          <div>{render ? render(data) : data}</div>\n        )}\n      </div>\n    )}\n    {children}\n  </div>\n)\n","import { atom, useAtom } from 'jotai'\nimport { atomWithHash, RESET } from 'jotai/utils'\n\nconst imageNoAtom = atomWithHash('image', 0)\nconst imageIdxAtom = atom(\n  (get) => {\n    const imageNo = get(imageNoAtom)\n    return imageNo ? imageNo - 1 : null\n  },\n  (_, set, idx: number | null) => {\n    set(imageNoAtom, typeof idx === 'number' ? idx + 1 : RESET)\n  }\n)\n\nexport const useImageHash = () => useAtom(imageIdxAtom)\n","import React from 'react'\n\nimport { ExternalLink } from '../../common/components/ExternalLink'\nimport { Tags } from '../../common/components/Tags'\nimport notEmpty from '../../common/utility/not-empty'\nimport { DetailBody } from './DetailBody'\nimport { ImagesPreview } from './ImagesPreview'\nimport { InfoRow } from './InfoRow'\nimport { useImageHash } from './use-image-hash'\n\ntype DetailContentProps = {\n  project: Queries.ProductDetailFragment\n}\n\nexport const DetailContent = ({ project }: DetailContentProps) => {\n  const { name, imagesLarge, model } = project\n  const [imageIdx, setImageIdx] = useImageHash()\n  return (\n    <>\n      <div\n        className=\"flex items-center py-0.5 sm:py-1 md:py-1.5 pl-3 -ml-2 pr-4 rounded-sm \n        shadow-glow shadow-white/30 dark:shadow-black/30\n        backdrop-blur-xl bg-gradient-to-br from-slate-800/95 dark:from-white/95 via:bg-slate-800/90 dark:via-white/90 to-slate-800/60 dark:to-white/60\"\n      >\n        <h1 className=\"flex-1 text-xl text-bg-primary sm:text-2xl md:text-3xl md:w-auto\">{name}</h1>\n        <div className=\"text-base text-bg-primary sm:text-lg md:text-xl md:w-auto mr-2\">{model}</div>\n      </div>\n      <div className=\"flex flex-col mt-6 mb-6 md:mt-8 gap-x-12 lg:gap-x-16 gap-y-4 md:flex-row \">\n        <div className=\"block md:hidden\">\n          <MainInfo project={project} />\n        </div>\n        <div className=\"flex-1 mb-4\">\n          <DetailBody project={project} selectedImageIdx={imageIdx} onClosePreview={() => setImageIdx(null)} />\n        </div>\n        <div className=\"md:w-1/3\">\n          <div className={`grid gap-y-4 mb-4`}>\n            <div className=\"hidden md:block\">\n              <MainInfo project={project} />\n            </div>\n            {imagesLarge && (\n              <div className=\"row-start-1 mb-1 md:row-start-auto\">\n                <ImagesPreview\n                  images={imagesLarge}\n                  onClick={(idx) => setImageIdx(idx)}\n                  selectedImageIdx={imageIdx}\n                  onClosePreview={() => setImageIdx(null)}\n                />\n              </div>\n            )}\n\n            {/* {imageIdx === null && <SecondaryInfo project={project} />} */}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\ntype MainInfoProps = { project: Queries.ProductDetailFragment }\nconst MainInfo = ({ project: { categories, price } }: MainInfoProps) => {\n  return (\n    <div>\n      {/* {organization?.link ? (\n        <InfoRow\n          rowTitle=\"Organization:\"\n          data={organization}\n          render={(organization) => <ExternalLink link={organization.link || ''} label={organization.name} />}\n        />\n      ) : (\n        <InfoRow data=\"Hobby Project\" />\n      )} */}\n      <InfoRow rowTitle=\"Price:\" data={`${price} €`} />\n      {categories && <InfoRow rowTitle=\"Categories:\" data={categories.filter(notEmpty)} render={(area) => area.name} />}\n    </div>\n  )\n}\n\n// type SecondaryInfoProps = { project: Queries.ProductDetailFragment }\n// const SecondaryInfo = ({ project: { links, tags } }: SecondaryInfoProps) => {\n//   return (\n//     <>\n//       {links && links?.length > 0 && (\n//         <div className=\"leading-snug\">\n//           {links.filter(notEmpty).map((link) => (\n//             <ExternalLink key={link.id} {...link} />\n//           ))}\n//         </div>\n//       )}\n//       {tags && (\n//         <div className=\"mt-1\">\n//           <Tags tags={tags} />\n//         </div>\n//       )}\n//     </>\n//   )\n// }\n","import * as React from \"react\";\n\nfunction ChevronLeftIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction ChevronRightIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/solid'\nimport { Link } from 'gatsby'\nimport React from 'react'\n\nexport type SliderControlProps = {\n  prevSlug: string\n  nextSlug: string\n}\nexport const SliderControls = ({ prevSlug, nextSlug }: SliderControlProps) => {\n  return (\n    <div className=\"relative z-10 flex items-center justify-between h-full\">\n      <Link to={`../${prevSlug}`}>\n        <div className=\"flex items-center justify-center rounded-tr-sm rounded-br-sm shadow-md hover:text-brand text-secondary bg-white/80 dark:bg-black/80 group\">\n          <ChevronLeftIcon className=\"w-8 h-8 mx-2 my-1 transition-all sm:ml-8 md:w-10 md:h-10 \" />\n        </div>\n      </Link>\n      <Link to={`../${nextSlug}`}>\n        <div className=\"flex items-center justify-center rounded-tl-sm rounded-bl-sm shadow-md hover:text-brand text-secondary bg-white/80 dark:bg-black/80 group\">\n          <ChevronRightIcon className=\"w-8 h-8 mx-2 my-1 transition-all sm:mr-8 md:w-10 md:h-10\" />\n        </div>\n      </Link>\n    </div>\n  )\n}\n","import { useBreakpoint } from 'gatsby-plugin-breakpoints'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport React from 'react'\n\nimport { Container } from '../../common/components/Container'\nimport { getStrapiImage } from '../../common/utility/get-image'\nimport { DetailContent } from './DetailContent'\nimport { SliderControlProps, SliderControls } from './SliderControls'\n\ntype ProductDetailProps = {\n  project: Queries.ProductDetailFragment\n} & SliderControlProps\n\nexport const ProductDetail = ({ project, nextSlug, prevSlug }: ProductDetailProps) => {\n  const breakpoints = useBreakpoint()\n  const coverImages = project.imagesLarge?.slice(0, breakpoints['md'] ? 2 : 1)\n\n  return project ? (\n    <div className=\"relative min-h-full overflow-auto\">\n      <div className={`h-[40vh] md:h-[40vh] lg:h-[50vh] relative`}>\n        {coverImages && (\n          <div className=\"flex h-full\">\n            {coverImages.map((d) => {\n              const image = getStrapiImage(d)\n              return image ? (\n                <GatsbyImage\n                  loading=\"eager\"\n                  image={image}\n                  objectFit=\"cover\"\n                  // objectPosition=\"50% 30%\"\n                  className=\"w-full h-full dark:opacity-90 \"\n                  alt={d?.alternativeText || ''}\n                />\n              ) : null\n            })}\n          </div>\n        )}\n        <div className=\"absolute inset-0 h-full top-[85%] bg-gradient-to-b from-transparent to-bg-primaryLayer\" />\n        <div className=\"absolute inset-0\">\n          <SliderControls prevSlug={prevSlug} nextSlug={nextSlug} />\n        </div>\n      </div>\n      <div className=\"relative z-10 pt-0 pb-16 \">\n        <Container className=\"relative max-w-xl md:max-w-5xl -top-5 sm:-top-6 md:-top-8\">\n          <DetailContent project={project} />\n        </Container>\n      </div>\n    </div>\n  ) : null\n}\n","import { Link } from 'gatsby'\nimport React from 'react'\n\ntype ModalNavbarProps = {\n  closePath: string\n}\nexport const ProductDetailNavContent = ({ closePath }: ModalNavbarProps) => {\n  return (\n    <Link to={closePath}>\n      <div className={`p-3 hover:text-brand tracking-wide`}>Close</div>\n    </Link>\n  )\n}\n","import { PageProps } from 'gatsby'\nimport { graphql } from 'gatsby'\nimport React from 'react'\n\nimport Layout from '../../common/components/Layout'\nimport { Navbar } from '../../common/components/Navbar'\nimport { PATH } from '../../common/constants/paths'\nimport { ProductDetail } from '../../features/project/Detail'\nimport { ProductDetailNavContent } from '../../features/project/NavContent'\n\nexport type ProjectsAndAreas = {\n  projects: Queries.ProductDetailFragment[]\n  areas: Queries.CategoryBaseFragment[]\n}\n\nconst ProjectsDetailPage = ({ data: { product, allProducts } }: PageProps<Queries.ProductDetailPageQuery>) => {\n  const activePojectIdx = allProducts.nodes.findIndex(({ slug }) => slug === product?.slug)\n  const prevIdx = activePojectIdx > 0 ? activePojectIdx - 1 : allProducts.nodes.length - 1\n  const nextIdx = (activePojectIdx + 1) % allProducts.nodes.length\n  const [prevSlug, nextSlug] = [prevIdx, nextIdx].map((idx) => allProducts.nodes[idx].slug || '')\n\n  if (!product) {\n    return null\n  }\n\n  return (\n    <Layout\n      navbar={\n        <Navbar className=\"dark:shadow-md\">\n          <ProductDetailNavContent closePath={PATH.HOME} />\n        </Navbar>\n      }\n    >\n      <ProductDetail project={product} nextSlug={nextSlug} prevSlug={prevSlug} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ProductDetailPage($slug: String!) {\n    allProducts: allStrapiProduct(sort: { fields: [createdAt], order: DESC }) {\n      nodes {\n        slug\n        createdAt\n      }\n    }\n    product: strapiProduct(slug: { eq: $slug }) {\n      ...ProductDetail\n    }\n  }\n`\n\nexport default ProjectsDetailPage\n"],"names":["PATH","HOME","PRODUCT","PROJECTS","getStrapiImage","queryImage","localFile","_queryImage$localFile","childImageSharp","_queryImage$localFile2","gatsbyImageData","Container","className","children","React","twMerge","ImageContainer","image","caption","alternativeText","onClose","breakpoint","useBreakpoint","GatsbyImage","alt","loading","lg","onClick","DetailBody","project","description","imagesLarge","selectedImageIdx","onClosePreview","selectedImage","useMemo","filter","notEmpty","ImagesPreview","images","map","idx","imageData","key","id","InfoRow","title","rowTitle","data","render","Array","isArray","item","imageNoAtom","atomWithHash","imageIdxAtom","atom","get","imageNo","_","set","RESET","DetailContent","name","model","useAtom","imageIdx","setImageIdx","MainInfo","categories","price","area","props","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","SliderControls","prevSlug","nextSlug","Link","to","ChevronLeftIcon","ChevronRightIcon","ProductDetail","breakpoints","coverImages","_project$imagesLarge","slice","objectFit","ProductDetailNavContent","closePath","product","allProducts","activePojectIdx","nodes","findIndex","slug","length","Layout","navbar","Navbar"],"sourceRoot":""}